name: Train Model in Jupyter Notebook and Test API

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nbconvert ipykernel

      - name: Run Jupyter Notebook
        run: |
          jupyter nbconvert --to notebook --execute training.ipynb --output executed_training.ipynb
        env:
          MLFLOW_EXPERIMENT_NAME: Tree_Health_Classification

      - name: Check Notebook Execution Status
        run: |
          if grep -q 'ERROR' executed_training.ipynb; then
            echo "Notebook execution failed."
            exit 1
          else
            echo "Notebook executed successfully."
          fi


  check-fastapi-server:
    runs-on: ubuntu-latest

    steps:
      - name: Start FastAPI Server
        run: |
          nohup python api_service.py &> server.log &
          sleep 10  # Даем время серверу запуститься
        id: start-server

      - name: Test FastAPI Health Endpoint
        run: |
          curl -X GET "http://127.0.0.1:8000/health"
          if [ $? -ne 0 ]; then
            echo "FastAPI server health check failed."
            cat server.log
            exit 1
          else
            echo "FastAPI server is healthy."
          fi

      - name: Stop FastAPI Server
        if: always()
        run: |
          pkill -f api_service.py || true